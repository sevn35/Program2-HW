//---------------------------------------------------------------------------------
//Name:         Sevn Webber
//Assignment:   A5 Inheritance
//Due:          3/19/2023
//Purpose:      Review and reinforcement of inheritance, classes, objects, pointers, 
//                  and multi-file project with separate compilations.
//---------------------------------------------------------------------------------
//c++ include files
//---------------------------------------------------------------------------------
#include "Executive.h"
//---------------------------------------------------------------------------------
//Main Function
//---------------------------------------------------------------------------------
int main(){
    //-----------------------------------------------------------------------------
    //Main Variables
    //-----------------------------------------------------------------------------
    Employee* e1 = new Employee("Thomas","Lipton","364-25-1784",75000);
    Employee* e2 = new Employee("Pietro","Barilla","226-35-4412",100000);
    Manager* m1 = new Manager("Papa","Johns","364-25-1784",200000,"Cheese");
    Manager* m2 = new Manager("Billy","Sims","226-34-4412",250000,"BBQ");
    Executive* x1 = new Executive("King","Pizza","145-99-4265",600000,"Tomato Sauce");
    Executive* x2 = new Executive("Queen","BBQ","456-32-1578",1000000,"Texan Stake");
    //-----------------------------------------------------------------------------
    //Display
    //-----------------------------------------------------------------------------
    cout << "==================================================" << endl;
    cout << "              Employee Information                " << endl;
    cout << "==================================================" << endl;
    e1->print(cout);
    e2->print(cout);
    m1->print(cout);
    m2->print(cout);
    x1->print(cout);
    x2->print(cout);
    cout << "==================================================" << endl;
    //-----------------------------------------------------------------------------
    //Cleares memory
    //-----------------------------------------------------------------------------
    delete e1;
    delete e2;
    delete m1;
    delete m2;
    delete x1;
    delete x2;
    //-----------------------------------------------------------------------------
    return 0;
}